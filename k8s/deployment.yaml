apiVersion: v1
kind: Namespace
metadata:
  name: profiling-system
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: profile-data-pvc
  namespace: profiling-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profiling-server
  namespace: profiling-system
  labels:
    app: profiling-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profiling-server
  template:
    metadata:
      labels:
        app: profiling-server
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: server
        image: profiling-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 50051
          name: grpc
        volumeMounts:
        - name: profile-data
          mountPath: /usr/local/bin/data
        env:
        - name: RUST_LOG
          value: "info"
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
              - ALL
      volumes:
      - name: profile-data
        persistentVolumeClaim:
          claimName: profile-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: profiling-server
  namespace: profiling-system
spec:
  selector:
    app: profiling-server
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profiling-daemon
  namespace: profiling-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profiling-daemon
  template:
    metadata:
      labels:
        app: profiling-daemon
    spec:
      containers:
      - name: daemon
        image: profiling-daemon:latest
        resources:
          limits:
            memory: "256Mi"
            cpu: "300m"
          requests:
            memory: "128Mi"
            cpu: "150m"
        ports:
        - containerPort: 3001
        env:
        - name: RUST_LOG
          value: "info"
        - name: SERVER_URL
          value: "http://profiling-server:3000"
        - name: GRPC_URL
          value: "http://profiling-server:50051"
---
apiVersion: v1
kind: Service
metadata:
  name: profiling-daemon
  namespace: profiling-system
spec:
  selector:
    app: profiling-daemon
  ports:
  - port: 3001
    targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: profiling-frontend
  namespace: profiling-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: profiling-frontend
  template:
    metadata:
      labels:
        app: profiling-frontend
    spec:
      containers:
      - name: frontend
        image: profiling-frontend:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "200m"
          requests:
            memory: "64Mi"
            cpu: "100m"
        ports:
        - containerPort: 80
        env:
        - name: VITE_API_URL
          value: "http://profiling-server:3000"
---
apiVersion: v1
kind: Service
metadata:
  name: profiling-frontend
  namespace: profiling-system
spec:
  selector:
    app: profiling-frontend
  ports:
  - port: 80
    targetPort: 80 